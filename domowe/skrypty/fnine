function Func_fnine()
{
	C_WARN=''
	C_STD='-std=c90'
	
	CPP_WARN=''
	CPP_STD='-std=c++03'
	
	PY_STD='python2'
	
	OBJECTS=0
	CMPL_ONLY=0
	REMOVE=0
	
	for I in $@
	do		
		case $I in
			-C)
				CMPL_ONLY=1
			;;
			-R)
				REMOVE=1
			;;
			-CR)
				CMPL_ONLY=1
				REMOVE=1
			;;
			
			-c90)
				C_STD='-std=c90'
			;;
			-c99)
				C_STD='-std=c99'
			;;
			-c11)
				C_STD='-std=c11'
			;;
			-cw)
				C_WARN='-Wall -Wextra'
			;;
			
			+c03)
				CPP_STD='-std=c++03'
			;;
			+c11)
				CPP_STD='-std=c++11'
			;;
			+c14)
				CPP_STD='-std=c++14'
			;;
			+cw)
				CPP_WARN='-Wall -Wextra'
			;;
			
			-py2)
				PY_STD='python2'
			;;
			-py3)
				PY_STD='python3'
			;;
			
			*.c)
				OBJECTS=1
				NAME=${I%.*}
			
				if test -f $I
				then
					echo "gcc $C_STD $C_WARN $I -o $NAME"
					gcc $C_STD $C_WARN $I -o $NAME
					
					if test $CMPL_ONLY -eq 0
					then
						echo "./$NAME"
						./$NAME
					fi
					
					if test $REMOVE -eq 1
					then
						echo "rm -f $NAME"
						rm -f $NAME
					fi
				else
					echo "fnine: $I: Nie ma takiego pliku. Stop."
					return 2
				fi
			;;
			
			*.cpp)
				OBJECTS=1
				NAME=${I%.*}
				
				if test -f $I
				then
					echo "g++ $CPP_STD $CPP_WARN $I -o $NAME"
					g++ $CPP_STD $CPP_WARN $I -o $NAME
					
					if test $CMPL_ONLY -eq 0
					then
						echo "./$NAME"
						./$NAME
					fi
					
					if test $REMOVE -eq 1
					then
						echo "rm -f $NAME"
						rm -f $NAME
					fi
				else
					echo "fnine: $I: Nie ma takiego pliku. Stop."
					return 2
				fi
			;;
			
			*.py)
				OBJECTS=1
			
				if test -f $I
				then
					echo "$PY_STD $I"
						$PY_STD $I
				else
					echo "fnine: $I: Nie ma takiego pliku. Stop."
					return 2
				fi
			;;
			
			-*)
				echo "fnine: Błędna opcja $I. Stop."
				return 2
			;;
			+*)
				echo "fnine: Błędna opcja $I. Stop."
				return 2
			;;
			*.*)
				echo "fnine: $I: Nieobsługiwany format pliku. Stop."
				return 2
			;;
			*)
				echo "fnine: $I: Niepoprawny argument. Stop."
				return 2
		esac
	done
	
	if test $OBJECTS -eq 0
	then
		echo "fnine: Nie podano obiektów. Stop."
		return 2
	fi
}

Func_fnine $@

